#!/usr/bin/env python3
"""
Teste r√°pido da Fase 2 - Dia 4 Manh√£
Valida se popula√ß√£o autom√°tica funcionou
"""
import asyncio
from database.repositories import get_stock_repository

async def test_enhanced_population():
    """Testa se popula√ß√£o autom√°tica funcionou"""
    print("üß™ TESTANDO POPULA√á√ÉO AUTOM√ÅTICA")
    print("=" * 40)
    
    try:
        repo = get_stock_repository()
        
        # 1. Contar total
        total = repo.count_all_stocks()
        print(f"üìä Total de a√ß√µes: {total}")
        
        # 2. Verificar qualidade
        high_quality = repo.count_stocks_by_quality('good')
        print(f"‚úÖ Qualidade boa: {high_quality}")
        
        # 3. Verificar pre√ßos v√°lidos
        with_prices = repo.count_stocks_with_prices()
        print(f"üí∞ Com pre√ßos v√°lidos: {with_prices}")
        
        # 4. Teste de uma a√ß√£o espec√≠fica
        petr4 = repo.get_stock_by_symbol("PETR4")
        if petr4:
            print(f"üß™ PETR4: R$ {petr4.current_price} - {petr4.data_quality.value}")
        
        # 5. Avalia√ß√£o final
        if total >= 30 and with_prices >= 25:
            print("üéâ TESTE PASSOU - Popula√ß√£o bem-sucedida!")
            return True
        else:
            print("‚ö†Ô∏è  TESTE PARCIAL - Popula√ß√£o parcial")
            return False
            
    except Exception as e:
        print(f"‚ùå ERRO NO TESTE: {e}")
        return False

if __name__ == "__main__":
    success = asyncio.run(test_enhanced_population())
    exit(0 if success else 1)
